#-----------------------------------------------------------------------------
# UNIX (CC,g++,lcc)
#-----------------------------------------------------------------------------
LIB    = ../../$(L).a
CFLAGS = -O
ARLIB  = ar r $(LIB) $?
RANLIB = ranlib $(LIB)
o      = .o
.c.o:
	$(CXX)  -I../../incl $(CFLAGS) $(DFLAGS) -c $*.c

.s.o:
	as -o $*.o $*.s


#-----------------------------------------------------------------------------
# WATCOM  (32 bit)
#-----------------------------------------------------------------------------
#LIB    = ..\..\$(L).lib
#ARLIB  =
#RANLIB =
#o      = .obj
#.c.obj:
#	wcl386 -zq -cc++ -I..\..\incl $(DFLAGS) -c $*.c
#	wlib -c -b $(LIB) +- $*.obj
 


#-----------------------------------------------------------------------------
# ZORTECH  (32 bit)
#-----------------------------------------------------------------------------
#LIB    = ..\..\$(L).lib
#ARLIB  =
#RANLIB =
#o      = .obj
#.c.obj:
#	ztc -cpp -w -mx -I..\..\incl $(DFLAGS) -c $*.c
#	zorlibx /N /B $(LIB) +- $*.obj,;
 


#-----------------------------------------------------------------------------
# BORLAND
#-----------------------------------------------------------------------------
#.SWAP
#LIB    = ..\..\$(L).lib
#ARLIB  =
#RANLIB =
#o      = .obj
#.c.obj:
#	bcc -P -Qx -w- -mh -N -I..\..\incl $(DFLAGS) -c $*.c
#	tlib /C $(LIB) +- $*.obj
 
 

#-----------------------------------------------------------------------------
# DJGPP / EMX
#-----------------------------------------------------------------------------
#LIB    = ../../$(L).a
#ARLIB  =
#RANLIB = 
#o      = .o
#.c.o:
#	gcc -I../../incl $(DFLAGS) -c -xc++ $*.c -xnone
#	ar r $(LIB) 




#-----------------------------------------------------------------------------


all: $(LIB)

include Make.lst


$(LIB): $(OBJECTS)
	$(ARLIB)
	$(RANLIB)

clean:
	rm -f $(OBJECTS)

